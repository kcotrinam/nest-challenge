# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CategoryModel {
  createdAt: DateTime!
  id: Int!
  name: String!
  products: [ProductModel]!
  updatedAt: DateTime
}

type CategoryModelEdge {
  cursor: Int!
  node: CategoryModel!
}

type CategoryModelPageInfo {
  nextPage: Int
  page: Int
  perPage: Int
  prevPage: Int
  total: Int
  totalPages: Int
}

input CreateCategoryModel {
  name: String!
}

input CreateLikeModel {
  productId: Float!
  userId: Float!
}

input CreateOrderModel {
  isPaid: Boolean!
  total: Float!
}

input CreateOrderProductModel {
  order: Float!
  product: Float!
  quantity: Float!
}

input CreateProductModel {
  description: String
  image: String
  isDisabled: Boolean
  name: String!
  price: Float!
  stock: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteOrderProductModel {
  order: Float!
  product: Float!
}

type LikeModel {
  createdAt: DateTime!
  id: String!
  productId: String!
  updatedAt: DateTime
  userId: String!
}

type Mutation {
  createCategory(input: CreateCategoryModel!): CategoryModel!
  createLike(input: CreateLikeModel!): LikeModel!
  createOrder(input: CreateOrderModel!): OrderModel!
  createOrderProduct(input: CreateOrderProductModel!): OrderProductModel!
  createProduct(categoryId: Int!, input: CreateProductModel!): ProductModel!
  deleteOrderProduct(input: DeleteOrderProductModel!): OrderProductModel!
  removeCategory(id: Int!): CategoryModel!
  removeOrder(id: Int!): OrderModel!
  removeProduct(id: Int!): ProductModel!
  signIn(input: SigninInput!): TokenModel!
  signUp(input: SignupInput!): UserModel!
  updateCategory(input: UpdateCategoryModel!): CategoryModel!
  updateOrder(input: UpdateOrderModel!): OrderModel!
  updateProduct(input: UpdateProductModel!): ProductModel!
  verifyEmail(input: VerifyEmailInput!): UserModel!
}

type OrderModel {
  createdAt: DateTime
  id: Float!
  isPaid: Boolean!
  total: Float!
  updatedAt: DateTime
  userId: Float!
}

type OrderProductModel {
  createdAt: DateTime!
  id: Float!
  orderId: Float!
  productId: Float!
  quantity: Float!
  total: Float!
  updatedAt: DateTime
}

type PaginatedCategories {
  edges: [CategoryModelEdge!]
  pageInfo: CategoryModelPageInfo
}

type ProductModel {
  categoryId: Float!
  createdAt: DateTime!
  description: String!
  id: Float!
  image: String!
  isDisabled: Boolean
  likeCounter: Float!
  name: String!
  price: Float!
  stock: Float!
  updatedAt: DateTime
}

type Query {
  categories(page: Int = 1, perPage: Float = 10): PaginatedCategories!
  category(id: Int!): CategoryModel!
  disabledProducts(page: Int!, perPage: Int!): [ProductModel!]!
  order(id: Int!): OrderModel!
  orders(page: Int!, perPage: Int!): [OrderModel!]!
  ownOrders(page: Int!, perPage: Int!): [OrderModel!]!
  product(id: Int!): ProductModel!
  products(page: Int!, perPage: Int!): [ProductModel!]!
  user(id: Int!): [UserModel!]!
  users(page: Int!, perPage: Int!): [UserModel!]!
}

input SigninInput {
  email: String!
  password: String!
}

input SignupInput {
  email: String!
  isManager: Boolean!
  lastname: String!
  name: String!
  password: String!
}

type TokenModel {
  accessToken: String!
}

input UpdateCategoryModel {
  id: Float!
  name: String!
}

input UpdateOrderModel {
  id: Float!
  isPaid: Boolean
  total: Float
}

input UpdateProductModel {
  description: String
  id: Float!
  image: String
  name: String
  price: Float
  stock: Float
}

type UserModel {
  email: String!
  emailVerificationToken: String
  emailVerifiedAt: String
  id: ID!
  isManager: Boolean!
  lastname: String!
  name: String!
}

input VerifyEmailInput {
  id: String!
  token: String!
}
